# t-rex configuration

[service.mvt]
viewer = true

[[datasource]]
dbconn = "postgresql://chris@%2Fvar%2Frun%2Fpostgresql/power"

[grid]
predefined = "web_mercator"

[[tileset]]
name = "power"

[[tileset.layer]]
name = "power-point"
geometry_field = "way"
geometry_type = "POINT"
srid = 3857
fid_field = "osm_id"

[[tileset.layer.query]]
minzoom = 5
maxzoom = 16
sql = """
    SELECT
        osm_id,
        way,
        power AS kind,
        max_voltage,
        tags->'name' AS name,
        tags->'voltage' AS voltage,
        format_voltage(tags->'voltage') AS voltage_pretty,
        COALESCE(tags->'plant:source', tags->'generator:source') AS fuel,
        (tags->'capacity')::bigint AS capacity,
        format_capacity((tags->'capacity')::bigint) AS capacity_pretty,
        tags->'frequency' AS frequency,
        NULL AS grid,
        false AS label_placement
    FROM planet_osm_point
    WHERE way && !bbox!
    AND (
        (power IN ('substation', 'sub_station', 'station') AND (CASE
            WHEN !zoom! < 13 THEN max_voltage >= 40000
            ELSE TRUE
            END))
        OR (power='generator' AND COALESCE(tags->'generator:output:electricity', 'yes') != 'no' AND !zoom! >= 8)
        OR (power='plant' AND COALESCE(tags->'plant:output:electricity', 'yes') != 'no')
        OR (!zoom! >= 15 AND power IN ('tower', 'pole', 'portal', 'switch', 'transformer', 'compensator'))
    )
UNION ALL
    SELECT
        osm_id,
        label_placement AS way,
        power AS kind,
        max_voltage,
        tags->'name' AS name,
        tags->'voltage' AS voltage,
        format_voltage(tags->'voltage') AS voltage_pretty,
        COALESCE(tags->'plant:source', tags->'generator:source') AS fuel,
        (tags->'capacity')::bigint AS capacity,
        format_capacity((tags->'capacity')::bigint) AS capacity_pretty,
        tags->'frequency' AS frequency,
        grid,
        true AS label_placement
    FROM planet_osm_polygon
    WHERE label_placement && !bbox!
    AND (
        (power IN ('substation', 'sub_station', 'station') AND (CASE
            WHEN !zoom! < 10 THEN max_voltage >= 40000
            ELSE TRUE
            END))
        OR (power='generator' AND COALESCE(tags->'generator:output:electricity', 'yes') != 'no' AND !zoom! >= 8)
        OR (power='plant' AND COALESCE(tags->'plant:output:electricity', 'yes') != 'no')
    )
"""

[[tileset.layer]]
name = "power-line"
geometry_field = "way"
geometry_type = "LINESTRING"
srid = 3857
fid_field = "osm_id"
simplify = true
buffer_size = 1

[[tileset.layer.query]]
minzoom = 0
maxzoom = 11
sql = """
    SELECT
        osm_id,
        way,
        power AS kind,
        max_voltage,
        tags->'voltage' AS voltage,
        (string_to_array(tags->'voltage_normalized', ';'))[1]::integer AS voltage1,
        (string_to_array(tags->'voltage_normalized', ';'))[2]::integer AS voltage2,
        (string_to_array(tags->'voltage_normalized', ';'))[3]::integer AS voltage3,
        tags->'voltage_normalized' AS voltage_normalized,
        format_voltage(tags->'voltage') AS voltage_pretty,
        COALESCE((tags->'voltage_count')::integer, 0) AS voltage_count,
        tags->'name' AS name,
        tags->'cables' AS cables,
        tags->'frequency' AS frequency,
        grid
    FROM planet_osm_line
    WHERE way && !bbox!
    AND power IN ('line', 'cable')
    AND max_voltage >= (CASE
        WHEN !zoom! < 3 THEN 300000
        WHEN !zoom! < 5 THEN 100000
        ELSE 40000
    END)
    ORDER BY max_voltage
"""

[[tileset.layer.query]]
minzoom = 12
maxzoom = 16
sql = """
    SELECT
        osm_id,
        way,
        (CASE WHEN power='cable' AND max_voltage < 40000 THEN 'minor_cable' ELSE power END) AS kind,
        max_voltage,
        tags->'voltage' AS voltage,
        (string_to_array(tags->'voltage_normalized', ';'))[1]::integer AS voltage1,
        (string_to_array(tags->'voltage_normalized', ';'))[2]::integer AS voltage2,
        (string_to_array(tags->'voltage_normalized', ';'))[3]::integer AS voltage3,
        tags->'voltage_normalized' AS voltage_normalized,
        format_voltage(tags->'voltage') AS voltage_pretty,
        COALESCE((tags->'voltage_count')::integer, 0) AS voltage_count,
        tags->'name' AS name,
        tags->'cables' AS cables,
        tags->'frequency' AS frequency,
        grid
    FROM planet_osm_line
    WHERE way && !bbox!
    AND power IN ('line', 'cable', 'minor_line')
    ORDER BY max_voltage
"""

[[tileset.layer]]
name = "power-polygon"
geometry_field = "way"
geometry_type = "POLYGON"
srid = 3857
fid_field = "osm_id"
simplify = true
buffer_size = 1

[[tileset.layer.query]]
minzoom = 11
maxzoom = 16
sql = """
    SELECT
        osm_id,
        way,
        max_voltage,
        power AS kind,
        tags->'voltage' AS voltage,
        tags->'voltage_normalized' AS voltage_normalized,
        format_voltage(tags->'voltage') AS voltage_pretty,
        COALESCE((tags->'voltage_count')::integer, 0) AS voltage_count,
        tags->'frequency' AS frequency,
        grid,
        tags->'name' AS name
    FROM planet_osm_polygon
    WHERE way && !bbox!
    AND power IN ('substation', 'sub_station', 'station', 'plant', 'generator')
"""

[cache.file]
base = "cache"
#baseurl = "http://example.com/tiles"

[webserver]
# Bind address. Use 0.0.0.0 to listen on all adresses.
bind = "0.0.0.0"
port = 9092
threads = 8
#cache_control_max_age = 43200

